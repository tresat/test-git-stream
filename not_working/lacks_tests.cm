# -*- mode: yaml -*-
manifest:
  version: 1.0

# The `automations` section lists automations to run on PRs in this repository.
# Each automation has an `if` key that defines conditions to run the automation,
# as well as a `run` key with the actions to do. All the conditions need to be true
# for the actions to run (there is an implicit AND relation between
# the conditions on each line).  Each condition is specified as a Jinja expression.  You
# can also use the constant `true` if you want to always run the actions.

# Each automation is independent of the others.  Every time a PR is opened or changed,
# the conditions are evaluated and the actions are executed one by one in order
# if all the conditions pass.  You can define multiple automations in a .cm file, but
# each automation name should be unique within the file.

# Every action only runs if a JVM team member is the author of the change, for testing purposes.
automations:
  no_tests:
    if:
      - {{ author.on_jvm_team }}
      - {{ includes_src_changes }}
      - {{ includes_test_changes | nope }}
      - {{ not (source.diff.files | isFormattingChange) }} # Not only formatting-only changes
    run:
      - action: add-comment@v1
        args:
          comment: |
            'This PR appears to be lacking tests.  Consider adding tests to cover the new functionality.'

# To simplify the automations section, some calculations are placed under unique YAML keys defined here.
# Read the "|" not as "or", but as a "pipe", taking the output of the previous command and passing it to the next command.
# This section could also appear ahead of the automations section.

includes_src_changes: {{ files | match(regex=r/.*\/src\//) | some }}
includes_test_changes: {{ files | match(regex=r/.*\/(test|integTest|crossVersionTest|docsTest|smokeTest)\//) | some }}

author:
  on_jvm_team: {{ pr.author | match(list=jvm_team_members) }}

jvm_team_members:
  - 'big-guy'
  - 'tresat'
  - 'ghale'
  - 'jvandort'
  - 'octylFractal'