# -*- mode: yaml -*-
manifest:
  version: 1.0

# The `automations` section lists automations to run on PRs in this repository.
# Each automation has an `if` key that defines conditions to run the automation,
# as well as a `run` key with the actions to do. All the conditions need to be true
# for the actions to run (there is an implicit AND relation between
# the conditions on each line).  Each condition is specified as a Jinja expression.  You
# can also use the constant `true` if you want to always run the actions.

# Each automation is independent of the others.  Every time one of the `on` conditions match for
# this PR, this automations will have its `if` checked to run.  In a way, the `on` conditions
# function as an implicit first `if` for every automation in the file.

# You can define multiple automations in a .cm file, but each automation name should be unique
# within the file.  We keep each automation (or very closely related group of automations) in
# its own file.

on:
  - pr_created
  - commit

automations:

  javadoc_on_new_files:
    # Triggered for new Java files that lack Javadoc content.
    if:
      - {{ is.requested or not pr.author_is_org_member }}
      - {{ author.using_gitstream or not pr.author_is_org_member }}
      - {{ is.java and is.new }}
      - {{ source.diff.files | matchDiffLines(regex=r/\/*\*([\s\S]*?)\//) | nope }}
    run:
      - action: add-label@v1
        args:
          label: "⚠️ Missing Javadoc"
          color: {{ colors.yellow }}
      - action: add-comment@v1
        args:
          comment: |
            This PR creates new top-level Java classes, but has no Javadoc present. Please document all top-level classes with Javadoc.

is:
  requested: {{ (pr.comments | match(attr='content', term='@bot-gitstream check all') | some) or (pr.comments | match(attr='content', term='@bot-gitstream check javadoc') | some) }}
  java: {{ files | extensions | match(term='java') | every }}
  new: {{ source.diff.files | map(attr='original_file') | match(regex=r/^$/) | some }}

colors:
  yellow: 'ffb300'

author:
  using_gitstream: {{ (pr.author | isEnabledUser ) }}
