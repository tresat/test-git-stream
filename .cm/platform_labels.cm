# -*- mode: yaml -*-
manifest:
  version: 1.0

# The `automations` section lists automations to run on PRs in this repository.
# Each automation has an `if` key that defines conditions to run the automation,
# as well as a `run` key with the actions to do. All the conditions need to be true
# for the actions to run (there is an implicit AND relation between
# the conditions on each line).  Each condition is specified as a Jinja expression.  You
# can also use the constant `true` if you want to always run the actions.

# Each automation is independent of the others.  Every time one of the `on` conditions match for
# this PR, this automations will have its `if` checked to run.  In a way, the `on` conditions
# function as an implicit first `if` for every automation in the file.

# You can define multiple automations in a .cm file, but each automation name should be unique
# within the file.  We keep each automation (or very closely related group of automations) in
# its own file.

on:
  - pr_created
  - commit

automations:

  # Label changes by affected platforms (in blue)
  {% for platform in platforms %}
  label_platform_{{ platform.name }}:
    if:
      - {{ author.using_gitstream }}
    run:
      - action: add-label@v1
        args:
          label: 'platform:{{ platform.name }}'
          color: '0000FF'
  {% endfor %}

# To simplify the automations section, some calculations are placed under unique YAML keys defined here.
# Read the "|" not as "or", but as a "pipe", taking the output of the previous command and passing it to the next command.

filesByPlatform: {{ branch.diff.files_metadata | groupByPlatform }}

# Keys like `- build_infrastructure:` do not mean anything, they just need to be unique
# The `name:` field specifies the platform label, e.g. `name: build_infrastructure` => `platform:build_infrastructure` label
platforms:
  - bt_ge_build_cache:
    name: 'bt_ge_build_cache'
    changed: {{ filesByPlatform | filter(attr='name', match='bt_ge_build_cache') | map(attr='files') }}
  - build_infrastructure:
    name: 'build_infrastructure'
    changed: {{ filesByPlatform | filter(attr='name', match='build_infrastructure') | map(attr='files') }}
  - core_configuration:
    name: 'core_configuration'
    changed: {{ filesByPlatform | filter(attr='name', match='core_configuration') | map(attr='files') }}
  - core_execution:
    name: 'core_execution'
    changed: {{ filesByPlatform | filter(attr='name', match='core_execution') | map(attr='files') }}
  - core_runtime:
    name: 'core_runtime'
    changed: {{ filesByPlatform | filter(attr='name', match='core_runtime') | map(attr='files') }}
  - documentation:
    name: 'documentation'
    changed: {{ filesByPlatform | filter(attr='name', match='documentation') | map(attr='files') }}
  - extensibility:
    name: 'extensibility'
    changed: {{ filesByPlatform | filter(attr='name', match='extensibility') | map(attr='files') }}
  - gradle_enterprise:
    name: 'gradle_enterprise'
    changed: {{ filesByPlatform | filter(attr='name', match='gradle_enterprise') | map(attr='files') }}
  - ide:
    name: 'ide'
    changed: {{ filesByPlatform | filter(attr='name', match='ide') | map(attr='files') }}
  - jvm:
    name: 'jvm'
    changed: {{ filesByPlatform | filter(attr='name', match='jvm') | map(attr='files') }}
  - kotlin_dsl:
    name: 'kotlin_dsl'
    changed: {{ filesByPlatform | filter(attr='name', match='kotlin_dsl') | map(attr='files') }}
  - release_coordination:
    name: 'release_coordination'
    changed: {{ filesByPlatform | filter(attr='name', match='release_coordination') | map(attr='files') }}
  - software:
    name: 'software'
    changed: {{ filesByPlatform | filter(attr='name', match='software') | map(attr='files') }}

author:
  using_gitstream: {{ (pr.author | isEnabledUser ) }}
